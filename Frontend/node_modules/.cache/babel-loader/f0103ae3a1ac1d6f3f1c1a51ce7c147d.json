{"ast":null,"code":"var _jsxFileName = \"/Users/zermainelew/Documents/orbital/Frontend/src/Login/Loginpage.js\";\nimport React, { Component } from \"react\";\nimport \"./LoginStyle.scss\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport \"../App.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { MainPage } from \"../MainPage\";\nexport class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LoginOpen: true,\n      RegisterOpen: false,\n      ProfileOpen: false,\n      username: \"\",\n      password: \"\"\n    };\n    this.showRegister = this.showRegister.bind(this);\n    this.showLogin = this.showLogin.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n  }\n\n  handleRegister(username, email, password) {\n    const raw = {\n      username: username,\n      email: email,\n      password: password\n    };\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(raw),\n      redirect: \"follow\"\n    };\n    fetch(\"http://0.0.0.0:5200/register\", requestOptions).then(response => response.text()).then(result => result === \"Username already exist\" ? alert(\"User has already been registered. Please login/ choose another username.\") : alert(username + \" registered!\")).catch(error => console.log(\"error\", error));\n  } //where you can find the finalised username and password\n\n\n  handleLogin(name, password) {\n    const raw = {\n      username: name,\n      password: password\n    };\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(raw),\n      redirect: \"follow\"\n    };\n    fetch(\"http://0.0.0.0:5200/login\", requestOptions).then(response => response.text()).then(result => result === {\n      \"error\": \"Error - Invalid Username\"\n    } ? alert(\"User is not registered\") : result === {\n      \"error\": \"Error - Invalid password\"\n    } ? alert(\"Invalid password\") : this.setState({\n      ProfileOpen: true\n    })).catch(error => console.log(\"errors\", error));\n  }\n\n  showRegister() {\n    this.setState({\n      LoginOpen: false,\n      RegisterOpen: true\n    });\n  }\n\n  showLogin() {\n    this.setState({\n      LoginOpen: true,\n      RegisterOpen: false\n    });\n  }\n\n  render() {\n    if (this.state.ProfileOpen) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Redirect, {\n        to: \"./Asset\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(MainPage, {\n        name: this.state.username,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"page-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"EasyInvest\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"cursive\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"An online platform that manages your wealth\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-controller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controller \" + (this.state.LoginOpen ? \"selected-controller\" : \"\"),\n      onClick: this.showLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controller \" + (this.state.RegisterOpen ? \"selected-controller\" : \"\"),\n      onClick: this.showRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, this.state.LoginOpen && /*#__PURE__*/React.createElement(Login, {\n      profileOpen: this.state.ProfileOpen,\n      handleLogin: this.handleLogin,\n      users: this.state.users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), this.state.RegisterOpen && /*#__PURE__*/React.createElement(Register, {\n      users: this.handleRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 39\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/zermainelew/Documents/orbital/Frontend/src/Login/Loginpage.js"],"names":["React","Component","Login","Register","Redirect","MainPage","LoginPage","constructor","props","state","LoginOpen","RegisterOpen","ProfileOpen","username","password","showRegister","bind","showLogin","handleLogin","handleRegister","email","raw","requestOptions","method","headers","body","JSON","stringify","redirect","fetch","then","response","text","result","alert","catch","error","console","log","name","setState","render","users"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./LoginStyle.scss\";\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport \"../App.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { MainPage } from \"../MainPage\";\n\nexport class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LoginOpen: true,\n      RegisterOpen: false,\n      ProfileOpen: false,\n      username: \"\",\n      password: \"\",\n    };\n\n    this.showRegister = this.showRegister.bind(this);\n    this.showLogin = this.showLogin.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegister = this.handleRegister.bind(this);\n  }\n\n  handleRegister(username, email, password) {\n    const raw = {\n      username: username,\n      email: email,\n      password: password,\n    };\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(raw),\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://0.0.0.0:5200/register\", requestOptions)\n      .then((response) => response.text())\n      .then((result) =>\n        result === \"Username already exist\"\n          ? alert(\n              \"User has already been registered. Please login/ choose another username.\"\n            ) \n          : alert(username + \" registered!\")\n      )\n      .catch((error) => console.log(\"error\", error));\n  }\n\n\n  //where you can find the finalised username and password\n  handleLogin(name, password) {\n    const raw = {\n      username: name,\n      password: password,\n    };\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(raw),\n      redirect: \"follow\",\n    };\n\n    fetch(\"http://0.0.0.0:5200/login\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => \n        result === {\"error\":\"Error - Invalid Username\"}\n          ? alert(\"User is not registered\")\n          : result === {\"error\":\"Error - Invalid password\"}\n          ? alert(\"Invalid password\")\n          : this.setState({ ProfileOpen: true })\n      )\n      .catch((error) => console.log(\"errors\", error));\n  }\n\n  showRegister() {\n    this.setState({ LoginOpen: false, RegisterOpen: true });\n  }\n\n  showLogin() {\n    this.setState({ LoginOpen: true, RegisterOpen: false });\n  }\n\n  render() {\n    if (this.state.ProfileOpen) {\n      return (\n        <div>\n          <Redirect to=\"./Asset\" />\n          <MainPage name={this.state.username} />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"root-container\">\n        <h1 className=\"page-header\">EasyInvest</h1>\n        <h2 className=\"cursive\">\n          <em>An online platform that manages your wealth</em>\n        </h2>\n        <div className=\"box-controller\">\n          <div\n            className={\n              \"controller \" +\n              (this.state.LoginOpen ? \"selected-controller\" : \"\")\n            }\n            onClick={this.showLogin}\n          >\n            Login\n          </div>\n          <div\n            className={\n              \"controller \" +\n              (this.state.RegisterOpen ? \"selected-controller\" : \"\")\n            }\n            onClick={this.showRegister}\n          >\n            Register\n          </div>\n        </div>\n\n        <div className=\"box-container\">\n          {this.state.LoginOpen && (\n            <Login\n              profileOpen={this.state.ProfileOpen}\n              handleLogin={this.handleLogin}\n              users={this.state.users}\n            />\n          )}\n          {this.state.RegisterOpen && <Register users={this.handleRegister} />}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}