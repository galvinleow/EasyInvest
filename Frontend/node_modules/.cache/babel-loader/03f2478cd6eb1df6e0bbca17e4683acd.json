{"ast":null,"code":"var _jsxFileName = \"/Users/zermainelew/Documents/orbital/Frontend/src/Asset/graph.js\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: [\"2020\", \"2021\", \"2022\", \"2023\", \"2024\", \"2025\"],\n        datasets: [{\n          label: \"OCBC\",\n          data: [500, 1000, 1700, 2000, 2500, 3000],\n          backgroundColor: \"royalblue\"\n        }, {\n          label: \"DBS\",\n          data: [200, 600, 700, 100, 1500, 3000],\n          backgroundColor: \"rgba(255, 99, 132, 0.6)\"\n        }]\n      }\n    };\n  }\n\n  getData() {\n    const requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"{{baseURL}}/calculateProjected/5Hbb6nIBPzr6Zbi7ed5P\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Line, {\n      data: this.state.chartData,\n      options: {\n        title: {\n          display: true,\n          text: \"Projected Accumulated Savings\",\n          fontSize: 25\n        },\n        legend: {\n          display: true,\n          position: \"right\"\n        }\n      },\n      height: \"120\",\n      width: \"450\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/Users/zermainelew/Documents/orbital/Frontend/src/Asset/graph.js"],"names":["React","Component","Line","Graph","constructor","props","state","chartData","labels","datasets","label","data","backgroundColor","getData","requestOptions","method","redirect","fetch","then","response","text","result","console","log","catch","error","render","title","display","fontSize","legend","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE,CACN,MADM,EACE,MADF,EACU,MADV,EACkB,MADlB,EAC0B,MAD1B,EACkC,MADlC,CADC;AAITC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,MADT;AAEEC,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAFR;AAGEC,UAAAA,eAAe,EAAE;AAHnB,SADQ,EAMR;AACEF,UAAAA,KAAK,EAAE,KADT;AAEEC,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,IAA3B,CAFR;AAGEC,UAAAA,eAAe,EAAE;AAHnB,SANQ;AAJD;AADA,KAAb;AAmBD;;AAEDC,EAAAA,OAAO,GAAG;AACV,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,QAAQ,EAAE;AAFW,KAAvB;AAKAC,IAAAA,KAAK,CAAC,qDAAD,EAAwDH,cAAxD,CAAL,CACGI,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAFlB,EAGGG,KAHH,CAGSC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAHlB;AAID;;AAECC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWC,SADnB;AAEE,MAAA,OAAO,EAAE;AACPoB,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELR,UAAAA,IAAI,EAAE,+BAFD;AAGLS,UAAAA,QAAQ,EAAE;AAHL,SADA;AAMPC,QAAAA,MAAM,EAAE;AACNF,UAAAA,OAAO,EAAE,IADH;AAENG,UAAAA,QAAQ,EAAE;AAFJ;AAND,OAFX;AAaE,MAAA,MAAM,EAAG,KAbX;AAcE,MAAA,KAAK,EAAG,KAdV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAoBD;;AAzD2B;;AA4D9B,eAAe5B,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: [\n          \"2020\", \"2021\", \"2022\", \"2023\", \"2024\", \"2025\"\n        ],\n        datasets: [\n          {\n            label: \"OCBC\",\n            data: [500, 1000, 1700, 2000, 2500, 3000],\n            backgroundColor: \"royalblue\",\n          },\n          {\n            label: \"DBS\",\n            data: [200, 600, 700, 100, 1500, 3000],\n            backgroundColor: \"rgba(255, 99, 132, 0.6)\",\n          },\n        ],\n      },\n    };\n  }\n\n  getData() {\n  const requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  \n  fetch(\"{{baseURL}}/calculateProjected/5Hbb6nIBPzr6Zbi7ed5P\", requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n}\n\n  render() {\n    return (\n      <div className=\"chart\">\n        <Line\n          data={this.state.chartData}\n          options={{\n            title: {\n              display: true,\n              text: \"Projected Accumulated Savings\",\n              fontSize: 25\n            },\n            legend: {\n              display: true,\n              position: \"right\",\n            },\n          }}\n          height = \"120\"\n          width = \"450\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}