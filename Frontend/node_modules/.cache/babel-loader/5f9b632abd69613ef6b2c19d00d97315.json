{"ast":null,"code":"var _jsxFileName = \"/Users/zermainelew/Documents/orbital/Frontend/src/Asset/test.jsx\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }\n  }))),\n  Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 35\n    }\n  }))),\n  Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 35\n    }\n  }))),\n  Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 36\n    }\n  }))),\n  DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 41\n    }\n  }))),\n  Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 34\n    }\n  }))),\n  Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }\n  }))),\n  Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 36\n    }\n  }))),\n  FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 39\n    }\n  }))),\n  LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 38\n    }\n  }))),\n  NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 38\n    }\n  }))),\n  PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 42\n    }\n  }))),\n  ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 41\n    }\n  }))),\n  Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 36\n    }\n  }))),\n  SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowUpward, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 39\n    }\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 45\n    }\n  }))),\n  ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 40\n    }\n  })))\n};\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Asset Name',\n      field: 'name'\n    }, {\n      title: 'Interest Rate per annum (%)',\n      field: 'interest',\n      type: 'numeric'\n    }, {\n      title: 'Current Value',\n      field: 'value',\n      type: 'numeric'\n    }],\n    data: [{\n      name: 'OCBC',\n      interest: 4,\n      value: 10000\n    }]\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"My Assets\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/zermainelew/Documents/orbital/Frontend/src/Asset/test.jsx"],"names":["React","MaterialTable","forwardRef","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","MaterialTableDemo","state","setState","useState","columns","title","field","type","data","name","interest","value","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\nAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\nCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\nClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\nDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\nExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\nFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\nFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\nLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\nNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\nPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\nResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\nSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\nSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\nThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\nViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Asset Name', field: 'name' },\n      { title: 'Interest Rate per annum (%)', field: 'interest', type: 'numeric' },\n      { title: 'Current Value', field: 'value', type: 'numeric' },\n    ],\n    data: [\n      { name: 'OCBC', interest: 4, value: 10000},\n    ],\n  });\n\n  return (\n    <MaterialTable\n     title=\"My Assets\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}