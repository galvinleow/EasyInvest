{"ast":null,"code":"var _jsxFileName = \"/Users/zermainelew/Documents/orbital/Frontend/src/Asset/table.jsx\";\nimport React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { forwardRef } from \"react\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nexport default function MaterialTableDemo(props) {\n  const tableIcons = {\n    Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 37\n      }\n    }))),\n    Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }))),\n    Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 39\n      }\n    }))),\n    Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 40\n      }\n    }))),\n    DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }))),\n    Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 38\n      }\n    }))),\n    FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 43\n      }\n    }))),\n    LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 42\n      }\n    }))),\n    NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 42\n      }\n    }))),\n    PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }))),\n    SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowUpward, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 43\n      }\n    }))),\n    ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }))),\n    ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 44\n      }\n    })))\n  };\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"Asset Name\",\n      field: \"name\"\n    }, {\n      title: \"Interest Rate per annum (%)\",\n      field: \"interest\",\n      type: \"numeric\"\n    }, {\n      title: \"Current Value\",\n      field: \"value\",\n      type: \"numeric\"\n    }],\n    data: [{\n      name: \"OCBC\",\n      interest: 4,\n      value: 10000\n    }]\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: tableIcons,\n    title: \"My Assets\",\n    columns: state.columns,\n    data: state.data,\n    options: {\n      headerStyle: {\n        backgroundColor: \"royalblue\",\n        color: \"white\"\n      },\n      rowStyle: {\n        backgroundColor: \"#EEE\"\n      },\n      actionsColumnIndex: -1,\n      search: false\n    },\n    editable: {\n      onRowAddCancelled: rowData => console.log(\"Row adding cancelled\"),\n      onRowUpdateCancelled: rowData => console.log(\"Row editing cancelled\"),\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          if (!newData.name) {\n            alert('Cannot be empty');\n          }\n\n          resolve(); //to get added row after clicking add -> save\n\n          console.log(newData);\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve(); //to get edited row after clicking edit -> save\n\n          console.log(newData);\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve(); //to get deleted row after clicking delete -> save\n\n          console.log(oldData);\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/zermainelew/Documents/orbital/Frontend/src/Asset/table.jsx"],"names":["React","MaterialTable","forwardRef","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FirstPage","LastPage","Remove","ViewColumn","MaterialTableDemo","props","tableIcons","Add","ref","Delete","DetailPanel","NextPage","PreviousPage","SortArrow","ThirdStateCheck","state","setState","useState","columns","title","field","type","data","name","interest","value","headerStyle","backgroundColor","color","rowStyle","actionsColumnIndex","search","onRowAddCancelled","rowData","console","log","onRowUpdateCancelled","onRowAdd","newData","Promise","resolve","setTimeout","alert","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nexport default function MaterialTableDemo(props) {\n  const tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => (\n      <Check {...props} ref={ref} />\n    )),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => (\n      <ChevronRight {...props} ref={ref} />\n    )),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => (\n      <ChevronLeft {...props} ref={ref} />\n    )),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => (\n      <Remove {...props} ref={ref} />\n    )),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  };\n\n  const [state, setState] = React.useState({\n    columns: [\n      { title: \"Asset Name\", field: \"name\" },\n      {\n        title: \"Interest Rate per annum (%)\",\n        field: \"interest\",\n        type: \"numeric\",\n      },\n      { title: \"Current Value\", field: \"value\", type: \"numeric\" },\n    ],\n    data: [{ name: \"OCBC\", interest: 4, value: 10000 }],\n  });\n\n  return (\n    <MaterialTable\n      icons={tableIcons}\n      title=\"My Assets\"\n      columns={state.columns}\n      data={state.data}\n      options={{\n        headerStyle: {\n          backgroundColor: \"royalblue\",\n          color: \"white\",\n        },\n        rowStyle: {\n          backgroundColor: \"#EEE\",\n        },\n        actionsColumnIndex: -1,\n        search: false,\n      }}\n      editable={{\n        onRowAddCancelled: (rowData) => console.log(\"Row adding cancelled\"),\n        onRowUpdateCancelled: (rowData) => console.log(\"Row editing cancelled\"),\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              if (!newData.name) {\n                alert('Cannot be empty');\n              }\n              resolve();\n              //to get added row after clicking add -> save\n              console.log(newData);\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              //to get edited row after clicking edit -> save\n              console.log(newData);\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              //to get deleted row after clicking delete -> save\n              console.log(oldData);\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}